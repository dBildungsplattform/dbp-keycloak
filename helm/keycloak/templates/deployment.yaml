apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "common.names.name" . }}
  namespace: {{ template "common.names.namespace" . }}
  labels:
  {{- include "common.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ template "common.names.name" . }}
      app.kubernetes.io/component: keycloak
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  template:
    metadata:
      labels:
        {{- include "common.labels" . | nindent 8 }}
        app.kubernetes.io/component: keycloak
    spec:
      automountServiceAccountToken: false
      restartPolicy: {{ default "Always" .Values.restartPolicy }}
      containers:
        - name: {{ template "common.names.name" . }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }} 
          {{- if .command }}
          command:
            {{- toYaml .command | nindent 16 }}
          {{- end }}
          args:
            # - "--cache"
            # - "local"
            - "--optimized"
            - "--hostname"
            - "https://{{ tpl .Values.keycloakHostname . }}"
            - "--hostname-backchannel-dynamic"
            - "true"
            - "--import-realm"
          securityContext: {{- omit .Values.containerSecurityContext "enabled" | toYaml | nindent 12 }}
          resources: {{- toYaml .Values.resources | nindent 12 }}
          ports:
            {{- range .Values.containerPorts }}
            - name: {{ .name }}
              containerPort: {{ .port }}
              protocol: {{ .protocol }}
            {{- end }}
          startupProbe: {{- omit .Values.startupProbe "enabled" | toYaml | nindent 12 }}
          livenessProbe: {{- omit .Values.livenessProbe "enabled" | toYaml | nindent 12 }}
          readinessProbe: {{- omit .Values.readinessProbe "enabled" | toYaml | nindent 12 }}
          envFrom:
            # configs
            - configMapRef:
                name: {{ template "common.names.name" . }}
            {{- if .Values.extraConfig.create }}
            - configMapRef:
                name: "{{ .Values.extraConfig.name }}"
            {{- end }}
            {{- range .Values.extraConfig.external }}
            - configMapRef:
                name: "{{ . }}"
            {{- end }}
            # secrets
            - secretRef:
                name: "{{ .Values.secret.name }}"
            {{- if .Values.extraSecret.create }}
            - secretRef:
                name: "{{ .Values.extraSecret.name }}"
            {{- end }}
            {{- range .Values.extraSecret.external }}
            - secretRef:
                name: "{{ . }}"
            {{- end }}
          volumeMounts:
            - mountPath: "/opt/keycloak/data/import"
              name: realm-config
              readOnly: true
            {{- with .Values.extraVolumes }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
      volumes:
        - name: realm-config
          configMap:
            name: {{ .Values.realm.name }}
        {{- with .Values.extraVolumes }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
