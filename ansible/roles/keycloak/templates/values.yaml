#jinja2: trim_blocks:True, lstrip_blocks:True
replicaCount: {{ keycloak_replica_count }}
image:
  repository: "{{ keycloak_image_repository }}"
  tag: "{{ keycloak_image_tag }}"
  pullPolicy: "{{ keycloak_image_pull_policy }}"
  pullSecrets:
{% for secret in keycloak_image_pull_secrets %}
    - "{{ secret }}"
{% endfor %}

auth:
  existingSecret: "{{ keycloak_auth_existing_secret }}"
  secretName: "{{ keycloak_auth_secret_name }}"
  adminUsername: "{{ keycloak_auth_admin_username }}"
  adminPassword: "{{ keycloak_auth_admin_password }}"
  keycloakRs256PrivateKey: "{{ keycloak_auth_rs256_private_key }}"
  keycloakRs256Certificate: "{{ keycloak_auth_rs256_certificate }}"
  keycloakAdminSecret: "{{ keycloak_auth_admin_secret }}"
  keycloakClientSecret: "{{ keycloak_auth_client_secret }}"
  keycloakServiceClientCertificate: "{{ keycloak_auth_service_client_certificate }}"

importRealms: {{ keycloak_import_realms }}

command:
{% for command in keycloak_command %}
  - "{{ command }}"
{% endfor %}

extraArgs:
{% for arg in keycloak_extra_args %}
  - "{{ arg }}"
{% endfor %}

extraVolumes:
  {{ keycloak_extra_volumes | to_nice_yaml | indent(2) | trim }}
extraVolumeMounts:
  {{ keycloak_extra_volume_mounts | to_nice_yaml | indent(2) | trim }}

extraConfig:
  name: "{{ keycloak_extra_config_name }}"
  create: {{ keycloak_extra_config_create }}
  data:
{% for key, value in keycloak_extra_config_data.items() %}
    {{ key }}: "{{ value }}"
{% endfor %}
  external:
{% for item in keycloak_extra_config_external %}
    - "{{ item }}"
{% endfor %}

extraSecret:
  name: "{{ keycloak_extra_secret_name }}"
  create: {{ keycloak_extra_secret_create }}
  data:
{% for key, value in keycloak_extra_secret_data.items() %}
    {{ key }}: "{{ value }}"
{% endfor %}
  external:
{% for item in keycloak_extra_secret_external %}
    - "{{ item }}"
{% endfor %}

database:
  username: "{{ keycloak_database_username }}"
  password: "{{ keycloak_database_password }}"
  host: "{{ keycloak_database_host }}"
  port: "{{ keycloak_database_port }}"
  name: "{{ keycloak_database_name }}"
  type: "{{ keycloak_database_type }}"

realm:
  filepath: "{{ keycloak_realm_filepath }}"

keycloak:
  frontendHostname: "{{ keycloak_frontend_hostname }}"
  hostnameBackchannelDynamic: {{ keycloak_hostname_backchannel_dynamic }}
  serviceMonitor:
    enabled: {{ keycloak_service_monitor_enabled }}
    path: "{{ keycloak_service_monitor_path }}"
    port: "{{ keycloak_service_monitor_port }}"

test:
{% for value  in keycloak_hosts %}
  - name: "{{ value.name }}"
  {% if value.auth_only is defined %}
    authOnly: "{{ value.auth_only }}"
  {% else %}
    authOnly: "{{ keycloak_ingress_path_auth_only }}"
  {% endif %}
{% endfor %}
