name: 'Publish image to GHCR on push to branch'

on:
  push:
    branches-ignore:
      - 'main'

env:
  TARGET_IMAGE: "dbp-keycloak"

jobs:
  build_and_upload_image:
    name: Publish image
    runs-on: ubuntu-latest
    outputs:
      digest: ${{ steps.docker_build_push.outputs.digest }}
    permissions:
      packages: write
      contents: read
    strategy:
      matrix:
        variant: ['generic', 'erwin']
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      
      - name: Build image name and tags
        id: docker_meta_img
        uses: docker/metadata-action@v5
        with:
          images: | 
            name=ghcr.io/${{ github.repository_owner }}/${{ env.TARGET_IMAGE }}-${{ matrix.variant }}
          tags: |
            type=ref,event=branch,enable=true
            type=sha,enable=true,prefix=
      
      - name: Log into ghcr.io
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Build and push ${{ env.TARGET_IMAGE }} to ghcr
        id: docker_build_push
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64
          push: true
          tags: ${{ steps.docker_meta_img.outputs.tags }}
          labels: ${{ steps.docker_meta_img.outputs.labels }}
          build-args: |
            KEYCLOAK_VARIANT=${{ matrix.variant }}
  
  build_meta:
    runs-on: ubuntu-latest
    outputs:
      branch: ${{ steps.extract_branch_meta.outputs.branch }}
      sha: ${{ steps.extract_branch_meta.outputs.sha }}
    steps:
      - name: Extract branch meta
        shell: bash
        id: extract_branch_meta
        run: |
          if [ "${{ github.event_name }}" == 'pull_request' ]; then
            echo "branch=${{ github.event.pull_request.head.ref }}" >> $GITHUB_OUTPUT
            echo "sha=$(echo ${{ github.event.pull_request.head.sha }} | cut -c1-7)" >> $GITHUB_OUTPUT
          else
            echo "branch=${GITHUB_REF#refs/heads/}" >> $GITHUB_OUTPUT
            echo "sha=$(echo ${{ github.sha }} | cut -c1-7)" >> $GITHUB_OUTPUT
          fi


  trivy-vulnerability-scanning:
    needs:
      - build_and_upload_image
      - build_meta
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    steps:
      - name: run trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.29.0
        with:
          image-ref: "ghcr.io/${{ github.repository }}-generic:${{ needs.build_meta.outputs.sha }}"
          format: "sarif"
          output: "trivy-results.sarif"
          severity: "CRITICAL,HIGH"
          ignore-unfixed: true
          scan-type: 'image'
        env:
          TRIVY_SKIP_DB_UPDATE: false
          TRIVY_SKIP_JAVA_DB_UPDATE: true
      - name: upload trivy results
        if: ${{ always() }}
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: "trivy-results.sarif"
